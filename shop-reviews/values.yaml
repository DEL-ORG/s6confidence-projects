replicaCount: 2

appname: espresso-shop-reviews01
appname2: espresso-shop-reviews02 

image:
  repository: s6confidence/espresso-app
  pullPolicy: Always
  tag: "reviews-v1"

hpa:
  reviews1: espresso-hpa1
  reviews2: espresso-hpa2

pdb: 
  name: expresso-shop-reviews-pdb
  name2: expresso-shop-reviews-pdb2

configmap: 
  name: postgres-config

secret: 
  name: postgres  
 
env:  
  key: POSTGRES_USER
  value: postgres
  key2: POSTGRES_PASSWORD
  value2: danny
  key3: POSTGRES_DB
  value3: postgres  
  key4: POSTGRES_HOST
  values: postgres-postgresql-ha-postgresql 

sv:
  name: expresso-shop-reviews-01
  key: SERVICE_VERSION
  value: v1
  name2: expresso-shop-reviews-02
  key2: SERVICE_VERSION
  value2: v2
       
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  name: espresso-reviews-sa1
  name2: espresso-reviews-sa2
  create: true
  annotations: {}

podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000
securityContext: {}                    
  # runAsUser: 1000

service:
  name: espresso-shop-reviews-svc
  type: NodePort
  port: 8092
  targetPort: 80
  containername: http

probe: 
  enable: false

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

resources: 
 limits:
  cpu: 100m
  memory: 128Mi
requests:
  cpu: 100m
  memory: 128Mi
  
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  name1: cpu
  name2: cpu
  type: Utilization
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

#podDisruptionBudget: 1
#podDisruptionBudget:
  #minAvailable: 1
  #maxUnavailable: 1
  #name: prod-pdb

minReadySeconds: 5
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1  

nodeSelector: {}

tolerations: []

affinity: {}
